### public List<Dept> getDepts() {...} 
deptDao.getDepts=select * \
				 from web_school_depts \
				 order by dept_no asc		
				 		  
### public void insertStudent(Student student) {...}
studentDao.insertStudent=insert into web_school_students \
					     (student_id, student_password, student_name, \
					      student_grade, dept_no) \
					     values(?,?,?,?,?) 

### public Student getStudentById(String studentId) {...}
studentDao.getStudentById=select * \
						  from web_school_students \
						  where student_Id = ?
						  
### public void insertProfessor(Professor professor) {...}
professorDao.insertProfessor=insert into web_school_professors \
							 (professor_id, professor_password, professor_name, \
							  professor_position, dept_no) \
							 values (?,?,?,?,?) 

### public Professor getProfessorById(String professorId) {...}
professorDao.getProfessorById=select * \
							  from web_school_professors \
							  where professor_id = ?
							  

### public void insertCourse(Course course) {...}
courseDao.insertCourse=insert into web_school_courses \
						  (course_no, course_name, course_type, course_score, \
						   course_quota, course_description, \
						   dept_no, professor_id) \
						values(web_school_courses_seq.nextval, ?,?,?,?,?,?,?)   
						  
### public List<Course> getCoursesByProfessorId(String professorId, int begin, ing end) {...}
courseDao.getCoursesByProfessorId=select * \
								  from (select row_number() over (order by A.course_no desc) row_number, \
									            A.course_no, A.course_type, A.course_name, \
								                B.dept_name, A.course_quota, A.course_req_cnt \
								  from web_school_courses A, web_school_depts B \
								  where A.dept_no = B.dept_no \
								  and A.professor_id = ?) \
								  where row_number between ? and ?
								  
### public int getTotalRows() {...}
courseDao.getTotalRowsByProfessor=select count(*) as cnt \
					   from (select A.course_no, A.course_type, A.course_name, \
								    B.dept_name, A.course_quota, A.course_req_cnt \
						     from web_school_courses A, web_school_depts B \
							 where A.dept_no = B.dept_no \
							 order by A.course_no desc)
							 
### public Course getCourseByNo(int CourseNo) {...}
courseDao.getCourseByNo=select A.course_name, A.course_no, A.course_type, A.course_score, \
							   B.dept_name, C.professor_name, A.course_quota, A.course_req_cnt, \
							   A.course_description \
						from web_school_courses A, web_school_depts B, web_school_professors C \
						where A.course_no = ? \
						and A.dept_no = B.dept_no \
						and A.professor_id = C.professor_id 

### public List<Student> getStudentsByCourseNo(int courseNo) {...}
studentDao.getStudentsByCourseNo=select C.reg_no, A.student_id, A.student_name, B.dept_name, A.student_grade \
						   from web_school_students A, web_school_depts B , web_school_registrations C \
						   where A.dept_no = B.dept_no \
						   and A.student_id = C.student_id \
						   and C.course_no = ? \
						   order by reg_no asc 


### public int getTotalRows() {...]
courseDao.getTotalRows=select count(*) as cnt \
					   from web_school_courses

### public List<Course> getCourses(int begin, int end) {...}
courseDao.getCourses=select * \
					  from (select row_number() over (order by A.course_no desc) row_number, \
						            A.course_no, A.course_name, \
					                B.dept_name, C.professor_name, \
					                A.course_quota, A.course_req_cnt \
					  from web_school_courses A, web_school_depts B, web_school_professors C \
					  where A.dept_no = B.dept_no \
					  and A.professor_id = C.professor_id) \
					  where row_number between ? and ?

### public void insertRegistration(Registration registration) {...}
registrationDao.insertRegistration=insert into web_school_registrations \
								   (reg_no, course_no, student_id) \
								   values(web_school_reg_seq.nextval, ?,?)


### public void updateCourse(Course course) {...}
courseDao.updateCourse=update web_school_courses \
					   set \
					   		course_name = ?, \
					   		course_type = ?, \
					   		course_score = ?, \
					   		course_quota = ?, \
					   		course_req_cnt = ?, \
					   		course_description = ?, \
					   		course_update_date = sysdate \
					   where course_no = ?

### public List<Course> getCoursesByStudentId(String studentId) {...}
courseDao.getCoursesByStudentId=select B.reg_no, A.course_no, A.course_name, \
									   D.dept_name, C.professor_name, B.reg_status \
								from web_school_courses A, web_school_registrations B, web_school_professors C, web_school_depts D \
								where A.course_no = B.course_no \
								and A.professor_id = C.professor_id \
								and A.dept_no = D.dept_no \
								and student_id = ? \
								order by B.reg_no desc

### public void updateRegistration(Registration registration) {...}
registrationDao.getRegistrationByNo=select * \
								    from web_school_registrations \
								    where reg_no = ?
								    
### public void updateRegistration(Registration registration) {...}
registrationDao.updateRegistration=update web_school_registrations \
								   set \
								   		course_no = ?, \
								   		student_id = ?, \
								   		reg_status = ?, \
								   		reg_update_date = sysdate \
								   where reg_no = ?

### public void getRegistrationByCourseAndStudent(int course_no, string student_id) {...}
registrationDao.getRegistrationByCourseAndStudent=select * \
												  from web_school_registrations \
												  where course_no = ? \
												  and student_id = ?





 


						  